unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir",recursive=TRUE)
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by-0.5)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with=myseq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep((0,1,2),times=10)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >=6
my_char <- c("My","name","is")
my_char
paste(my_char,collapse=" ")
my_name <- c(my_char,"Sexy")
my_name
paste(my_name,collapse=" ")
paste("Hello","world!",sep=" ")
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
library(datasets)
data(cars)
with(cars,plot(speed,dist))
library(lattice)
state <- data.frame(state.x77, region = state.region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
plot(speed,dist)
with(cars,plot(speed,dist))
str(plot)
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot(x,y)
z <- rnorm(100)
plot(x,z)
plot(x,y)
par(mar = c(2,2,2,2))
plot(x,y)
par(mar = c(4,4,2,2))
plot(x,y)
plot(x,y, pch = 20)
plot(x,y, pch = 2)
plot(x,y, pch = 3)
plot(x,y, pch = 4)
example(points)
plot(x,y, pch = 20)
x <- rnorm(100)
y
<- rnorm(100)
y <- rnorm(100)
plot(x,y, pch = 20)
title("Scatterplot")
text(-2,-2,"label")
legend("topleft",legend="Data")
legend("topleft",legend="Data", pch=20)
fit <- lm(y~x)
abline(fit)
abline(fit,lwd=3)
abline(fit,lwd=3,col="blue")
plot(x,y,xlab="Weight",ylab="Height",main="Scatterplot", pch=20)
clc
cl
help(cl)
?cl
?clc
?cl*
,
z <- pois(100,2)
z <- rpois(100,2)
par(mfrow = c(1,2))
plot(x,y)
plot(x,z)
?gl
?points
?Devices
library(datasets)
with(faithful,plot(eruptions,waiting))
par(mfrow = c(1,1))
with(faithful,plot(eruptions,waiting))
pdf(file="myplot.pdf")
with(faithful,plot(eruptions,waiting))
title(main="Old Faithful Geyser data")
dev.off()
dev.cur()
?dev.cur
?dev.set
con = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(con)
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github",
key = "373368733778088777bd",
secret = "5e4cefdd2978a44b8beb2528f287f67ab30fb380")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
myapp <- oauth_app("github",
key = "8a3029d4be6e9013ac6b",
secret = "1d590833c776896519958b30c00b5d95b29f48d7")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
q()
library(nlme)
library(lattice)
xyplot(weight~Time|Diet,BodyWeight)
str(xyplot)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
print(p)
?splom
?par
?trellis.par.set
?lpoints
?lines
?points
?axis
?print.trellis
?trellis.par.set
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(datasets)
data(airquality)
str(airquality)
airquality = transform(airquality, Month = factor(Month))
str(airquality)
?ggplot
?ggplot2
?log
log(1679.681)/log(16*268435456)
log(1679.681/580.323)
log(1679.681/580.323,base= exp(2))
log2(1679.681/580.323)
1000^(1/3)
320*8
2560+28+16
log2(1303.378/450.282)
4*136
544+85
log2(1479.502/493.623)
8 + 8*136 + 24
1120+53
1173/8
147*8
library(jpeg)
img <- readJPEG(system.file("img", "jeff.jpg", package="jpeg"),TRUE)
img <- readJPEG(system.file("img", ".\jeff.jpg", package="jpeg"),TRUE)
img <- readJPEG(system.file("img", ".\\jeff.jpg", package="jpeg"),TRUE)
img <- readJPEG(system.file("img", "C:\\Users\\Nikhil\\Documents\\R\\jeff.jpg", package="jpeg"),TRUE)
img <- readJPEG(system.file("img", "E:\\jeff.jpg", package="jpeg"),TRUE)
img <- readJPEG("jeff.jpg",TRUE)
img <- readJPEG("E:\\jeff.jpg",TRUE)
summary(img)
quantile(img,probsc(0.3,0.8))
quantile(img,probs=c(0.3,0.8))
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileURL,"GDP.csv")
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileURL,"Country.csv")
gdp <- read.csv("GDP.csv")
country <- read.csv("Country.csv")
names(gdp)
interect(gdp,country)
intersect(gdp,country)
intersect(names(gdp),names(country)
)
names(country)
head(gdp)
head(gdp$X)
head(country$CountryCode)
mergedData <- merge(gdp,country,by.x=="X",by.y="CountryCode",all=TRUE)
mergedData <- merge(gdp,country,by.gdp=="X",by.country="CountryCode",all=TRUE)
mergedData <- merge(gdp,country,by.gdp="X",by.country="CountryCode",all=TRUE)
length(mergedData)
str(mergedData)
head(mergedData)
str(gdp)
str(country)
sum(gpd$X == country$CountryCode)
sum(gdp$X == country$CountryCode)
mergedData = merge(gdp,country,by.gdp="X",by.country="CountryCode",all=TRUE)
mergedData = merge(gdp,country,by.x="X",by.y="CountryCode",all=TRUE)
str(mergedData)
mergeData = merge(country,gdp,by.x="CountryCode",by.y="X")
mergeData = merge(country,gdp,by.x="CountryCode",by.y="X",all=TRUE)
mergeData = merge(country,gdp,by.x="CountryCode",by.y="X")
?merge
mergeData = merge(country,gdp,by.x="CountryCode",by.y="X")
View(mergeData)
View(mergeData)
mergeData = merge(country,gdp,by.x="CountryCode",by.y="X",all=TRUE)
View(mergeData)
View(mergeData)
mergeData = merge(country,gdp,by.x="CountryCode",by.y="X")
View(mergeData)
mergeData = merge(country,gdp,by.x="CountryCode",by.y="X",all.x=all)
mergeData = merge(country,gdp,by.x="CountryCode",by.y="X",all.x=TRUE)
View(mergeData)
View(mergeData)
arranged <- arrange(mergeData,desc("Gross.domesic.product.2012"))
arranged <- arrange(mergeData,desc(Gross.domesic.product.2012))
arranged <- arrange(mergeData,desc(Grossdomesicproduct2012))
str(gdp)
rename(mergeData,gdpRank = Gross.domestic.product.2012)
library(dplyr)
arranged <- arrange(mergeData,desc(Grossdomesicproduct2012))
rename(mergeData,gdpRank = Gross.domestic.product.2012)
mergeData <- rename(mergeData,gdpRank<- Gross.domestic.product.2012)
mergeData <- rename(mergeData,gdpRank= Gross.domestic.product.2012)
str(mergeData)
arranged <- arrange(mergeData,desc(gdpRank))
arranged[13]
arranged[13,Long.Name]
arranged[13,arranged$Long.Name]
arranged[13,arranged["Long Name"]]
arranged[13,2
]
View(arranged)
arranged <- arrange(mergeData,desc(gdpRank))
View(arranged)
as.numeric(mergeData$gdpRank)
str(mergeData)
mergeData$gdpRank <- as.numeric(mergeData$gdpRank)
str(mergeData)
arranged <- arrange(mergeData,desc(gdpRank))
View(arranged)
View(gdp)
View(arranged)
View(country)
View(mergeData)
mergeData = merge(country,gdp,by.x="CountryCode",by.y="X",all.x=TRUE)
View(mergeData)
gdpRe <- rename(gpd,rank=Gross.domestic.product.2012)
gdpRe <- rename(gpd,rank=Grossdomesticproduct2012)
gdpRe <- rename(gdp,rank=Grossdomesticproduct2012)
gdpRe <- rename(gdp,rank=Gross.domestic.product.2012)
gdpRe$rank <- as.numeric(gdpRe$rank)
View(gdpRe)
gdpRe <- rename(gdp,rank=Gross.domestic.product.2012)
mergeData = merge(country,gdpRe,by.x="CountryCode",by.y="X",all.x=TRUE)
View(mergeData)
gdpRe$rank <- as.character(gdpRe$rank)
gdpRe$rank <- as.numeric(gdpRe$rank)
gdpRe$rank <- as.numeric(gdpRe$rank,is.na = FALSE)
mergeData = merge(country,gdpRe,by.x="CountryCode",by.y="X",all.x=TRUE)
View(mergeData)
arranged <- arrange(mergeData,desc(rank))
View(arranged)
arranged <- arranged[!is.na(arranged$rank)]
arranged <- arranged[,!is.na(arranged$rank)]
arr <- is.na(arranged$rank)
?good
arrangedN <- arranged[arr]
arrangedN <- arranged[!arr]
arrangedN <- arranged$rank[!arr]
arrangedN <- arranged[which(arr)]
arrangedN <- filer(arranged,arr=FALSE)
arrangedN <- filter(arranged,arr=FALSE)
View(arrangedN)
View(arrangedN)
arrangedN <- filter(arranged,!is.na(arranged$rank))
View(arrangedN)
?ddply
library(dplyr)
?ddply
library(reshape2)
?ddply
incgroup <- ddply(arrangedN,.(Income.Group),summarize,sum=mean(rank))
?ddply
incgroup <- ddply(arrangedN,.(Income.Group),summarize,sum=mean(rank))
library(plyr)
incgroup <- ddply(arrangedN,.(Income.Group),summarize,sum=mean(rank))
incgroup
quantilegroups <- quantile(arrangedN,probs=c(0.15,0.3.0.45,0.6,0.75))
quantilegroups <- quantile(arrangedN,probs=c(0.15,0.3,0.45,0.6,0.75))
quantilegroups <- quantile(arrangedN,probs=c(0.15,0.3,0.45,0.6,0.75),na.rm=TRUE)
?quantile
quantilegroups <- quantile(arrangedN$rank,probs=c(0.15,0.3,0.45,0.6,0.75),na.rm=TRUE)
summary(arrangedN$rank)
arrangedMute <- mutate(arrangedN,tempcat= quantilegroups)
?factor
arrangedMute <- mutate(arrangedN,rankcat= cut(rank,5,labels=c("VeryHigh","High","Medium","Low","VerLow")))
tempTable <- group_by(arrangedMute,rankcat)
tempTable
tempTable <- group_by(arrangedMute$Income.Group,rankcat)
View(arrangedMute)
?group-by
?group_by
tempTable <- group_by(arrangedMute,arrangedMute$Income.Group,rankcat)
tempTable <- arrangedMute["Income.Group","rankcat"]
tempTable
tempTable <- filter(arrangedMute,strcmp(arrangedMute$Income.Group,"Lower middle income")& strcmp(arrangedMute$rankcat,"VeryHigh"))
?strcmp
tempTable <- filter(arrangedMute,identical(arrangedMute$Income.Group,"Lower middle income")& identical(arrangedMute$rankcat,"VeryHigh"))
View(tempTable)
tempTable <- filter(arrangedMute,identical(arrangedMute$Income.Group,"Lower middle income"))
4 5 *
4*5
fileUrl <- "http://espn.go.com/nfl/team/_/name/bal/baltimore-ravens"
doc <- htmlTreeParse(fileUrl,useInternal=TRUE)
library(html)
library(xml)
library(XML)
doc <- htmlTreeParse(fileUrl,useInternal=TRUE)
scores <- xpathSApply(doc,"//li[@class='score']",xmlValue)
teams <- xpathSApply(doc,"//li[@class='team-name']",xmlValue)
scores
teams
doc
textAll <- xpathSApply(doc,xmlValue)
textAll <- xmlSApply(doc,xmlValue)
library(lattice)
library(datasets)
xyplot(Ozone ~ Wind,data= airquality)
airquality <- transform(airquality, Month=factor(Month))
xyplot(Ozone~Win|Month, data=airquality,layout=c(5,1))
xyplot(Ozone~Wind|Month, data=airquality,layout=c(5,1))
p <- xyplot(Ozone ~ Wind,data= airquality)
p
?set.seed
set.seed(10)
x <-rnorm(100)
f<-rep(0:1,each=50)
y<-x + f - f*x + rnorm(100,sd=0.5)
f <- factor(f,labels = c("Group 1","Group 2"))
xyplot(y~x|f,layout=c(2,1))
xyplot(y~x|f,panel = function(x,y,...)){}
xyplot(y~x|f,panel = function(x,y,...)){}
xyplot(y~x|f,panel = function(x,y,...)){panel.xyplot(x,y,...) panel.abline(h=media(y),lty=2)})
xyplot(y~x|f,panel = function(x,y,...)){panel.xyplot(x,y,...) panel.abline(h=media(y),lty=2)})
xyplot(y~x|f,panel = function(x,y,...)){
panel.xyplot(x,y,...)
panel.abline(h=media(y),lty=2)
})
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
xyplot(y~x|f,panel = function(x,y,...){
panel.xyplot(x,y,...)
panel.abline(h=media(y),lty=2)
})
xyplot(y~x|f,panel = function(x,y,...){
panel.xyplot(x,y,...)
panel.abline(h=media(y),lty=2)
})
xyplot(y~x|f,panel = function(x,y,...){
panel.xyplot(x,y,...)
panel.abline(h=median(y),lty=2)
})
xyplot(y~x|f,panel = function(x,y,...){
panel.xyplot(x,y,...)
panel.lmline(x,y,col=2)
})
library(ggplot2)
str(mpg)
qplot(displ,hwy,data=mpg)
qplot(displ,hwy,data=mpg,color=drv)
qplot(displ,hwy,data=mpg,geom=c("point","smooth"))
qplot(hwy,data=mpg,fill=drv)
qplot(displ,hwy,data=mpg,facets=.~drv)
qplot(displ,hwy,data=mpg,facets=drv~.,binwidth=2)
qplot(hwy,data=mpg,facets=drv~.,binwidth=2)
qplot(hwy,data=mpg,facets=drv~f,binwidth=2)
qplot(displ,hwy,data=mpg,facets=f~drv)
qplot(displ,hwy,data=mpg,facets=fl~drv)
qplot(hwy,data=mpg,facets=drv~fl,binwidth=2)
?geom
?qplot
?lm
head(maacs)
g <- ggplot(mpg,aes(displ,hwy))
print(g)
g + geom_point()
?aes
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(metho"lm")
g + geom_point() + geom_smooth(method="lm")
summary(g)
g + geom_point() + facet_grid(.~drv) + geom_smooth(method="lm")
g + geom_point() + facet_grid(fl~drv) + geom_smooth(method="lm")
?labs
?geom_point
library(nlme)
library(lattice)
xyplot(weight~Time|Diet,BodyWeight)
library(XML)
data <- htmlTreeParse("http://biostat.jhsph.edu/~jleek/contact.html",useInternal=TRUE)
data
nchar(data[10])
nchar(data[10,])
nchar(data)
str(data)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
str(htmlCode)
nchar(htmlCode)
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
library(foreigh)
library(foreign)
data <- read.for("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
data <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
?read.table
data <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for".skip=5)
data <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip=5)
data <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip=6)
data <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip=4)
data <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip=100)
data <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip=3)
data <- read.table("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",skip=4)
x<- 1:4
p<- x/sum(x)
temp <- rbind(x,p)
rownames(temp) <- c("X","Prob")
temp
sum(temp$X * temp$Prob)
sum(temp[1] * temp[2])
temp[1]
sum(temp[1,] * temp[2,])
odds <- 0.75/(1-0.52)
odds
odds*0.3
?pnorm
pnorm(0.8,rnorm(0:1,5))
pbinom(4,size=5,prob=0.5)
1 -pbinom(4,size=5,prob=0.5)
2 * sqrt(1/12000)
ppois(10,lambda=5*3)
pnorm(0.95,mean=1100,sd=75)
pnorm(0.95,mean=1100,sd=75)*100
1.645*7.5
1 -pbinom(3,size=5,prob=0.5,lower.tail=FALSE)
pbinom(3,size=5,prob=0.5,lower.tail=FALSE)
getwd()
setwd("R")
getwd()
setwd("RepData_PeerAssessment1")
getwd()
library("dplyr")
?mean
read.csv("activity.csv")
data <-read.csv("activity.csv")
desc(data)
str(data)
dataA <-  transform(data,date = factor(data$date))
dataB <- group_by(dataA,date)
summarize(dataA,steps = mean(steps,na.rm=TRUE))
head(dataA)
summarize(dataB,steps = mean(steps,na.rm=TRUE))
summarize(dataB,steps = sum(steps,na.rm=TRUE))
?quantile
summarize(dataA,steps = quantile(steps,probs=0.5,na.rm=TRUE))
.summarize(dataA,steps = quantile(steps,probs=c(0.5,50),na.rm=TRUE))
summarize(dataA,steps = quantile(steps,probs=c(0.5,50),na.rm=TRUE))
summarize(dataA,steps = quantile(steps,probs=c(0.5),na.rm=TRUE))
?hist
summarize(dataB,steps = sum(steps,na.rm=TRUE))
hist_sum <- summarize(dataB,steps = sum(steps,na.rm=TRUE))
hist(hist_sum$steps)
plot(hist_sum$date,hist_sum$steps,xlab="Date",ylab="Number of Steps")
barplot(hist_sum$date,hist_sum$steps,xlab="Date",ylab="Number of Steps")
?barplot
?hist
hist(data$steps)
hist(hist_sum$steps)
plot(hist_sum$date,hist_sum$steps,xlab="Date",ylab="Number of Steps",type="h")
plot(hist_sum$date,hist_sum$steps,xlab="Date",ylab="Number of Steps",type="h",bg="black")
plot(hist_sum$date,hist_sum$steps,xlab="Date",ylab="Number of Steps",type="h",bg="black",lwd=10)
plot(hist_sum$date,hist_sum$steps,xlab="Date",ylab="Number of Steps",type="h", density="20")
plot(hist_sum$date,hist_sum$steps,xlab="Date",ylab="Number of Steps",type="h", density=20)
plot.histogram?
plot.histogram?
/
?plot.histogram
plot.histogram(hist_sum$date,hist_sum$steps,xlab="Date",ylab="Number of Steps")
?xyplot
c<- ggplot(hist_sum$steps,aes(hist$sum)) + geom_bar()
library(ggplot)
library("ggplot2)
/
/
.
sdadas
asdka;sldk;
das
mean(data$steps,na.rm=TRUE)
;;;;;;;;;;;;;
")"
)
